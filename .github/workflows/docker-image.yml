name: Docker Image CI/CD

on:
  push:
    branches: [ "main", "staging", "develop_basil" ]

jobs:
  push_to_registry:
    name: Build and Push Docker Image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: byepesg/agro_online
          tags: |
            type=ref,event=branch

      - name: Debug Metadata
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_development:
    name: Deploy to Development Environment
    needs: push_to_registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop_basil'

    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy and Run Docker Container on Development
        env:
          DROPLET_IP: ${{ secrets.DEV_DROPLET_IP }}
          DROPLET_PASSWORD: ${{ secrets.DEV_DROPLET_PASSWORD }}
        run: |
          sshpass -p "${{ secrets.DEV_DROPLET_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "
          docker pull byepesg/agro_online:development &&
          docker stop agro_online_dev || true &&
          docker rm agro_online_dev || true &&
          docker run -d --restart unless-stopped -p 9002:8080 --name agro_online_dev byepesg/agro_online:development"

  deploy_staging:
    name: Deploy to Staging Environment
    needs: push_to_registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy and Run Docker Container on Staging
        env:
          DROPLET_IP: ${{ secrets.STAGE_DROPLET_IP }}
          DROPLET_PASSWORD: ${{ secrets.STAGE_DROPLET_PASSWORD }}
        run: |
          sshpass -p "${{ secrets.STAGE_DROPLET_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "
          docker pull byepesg/agro_online:staging &&
          docker stop agro_online_stage || true &&
          docker rm agro_online_stage || true &&
          docker run -d --restart unless-stopped -p 9003:8080 --name agro_online_stage byepesg/agro_online:staging"

  deploy_production:
    name: Deploy to Production Environment
    needs: push_to_registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Install SSH Client
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy and Run Docker Container on Production
        env:
          DROPLET_IP: ${{ secrets.PROD_DROPLET_IP }}
          DROPLET_PASSWORD: ${{ secrets.PROD_DROPLET_PASSWORD }}
        run: |
          sshpass -p "${{ secrets.PROD_DROPLET_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@${DROPLET_IP} "
          docker pull byepesg/agro_online:main &&
          docker stop agro_online_prod || true &&
          docker rm agro_online_prod || true &&
          docker run -d --restart unless-stopped -p 9001:8080 --name agro_online_prod byepesg/agro_online:main"
